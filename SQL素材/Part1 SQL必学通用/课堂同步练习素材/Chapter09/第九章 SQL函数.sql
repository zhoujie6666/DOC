-- 数值相关函数

-- ABS，返回绝对值
SELECT ABS(100);
SELECT ABS(-100);
SELECT ABS(Salary - 25000) FROM Employee;
SELECT ABS(Salary - 25000) FROM Employee;

-- POW，幂运算
SELECT POW(2,3);
SELECT POW(4,3);

-- SIGN，判断正负数
SELECT SIGN(100);
SELECT SIGN(0);
SELECT SIGN(-100);
SELECT Name,SIGN(Salary - 25000) AS SIGN FROM Employee ORDER BY SIGN DESC;

-- RAND，返回一个从0到1的随机值
SELECT RAND();
SELECT * FROM Employee ORDER BY RAND();

CREATE TABLE NUMERICTEST(
	NUM DECIMAL(20,10)
);
INSERT INTO NUMERICTEST VALUES(RAND()),(RAND()),(RAND()),(RAND()),(RAND());
SELECT * FROM NUMERICTEST;

-- CEIL，返回大于等于指定值的最小整数值
SELECT NUM,NUM*1000,CEIL(NUM * 1000) AS NUM2 FROM NUMERICTEST;
-- FLOOR，返回小于等于指定值的最大整数值
SELECT NUM,NUM*1000,FLOOR(NUM * 1000) AS NUM2 FROM NUMERICTEST;
-- ROUND，返回指定小数点位数的四舍五入值
SELECT NUM,NUM*1000,ROUND(NUM * 1000,0) AS NUM2 FROM NUMERICTEST;
SELECT NUM,NUM*1000,ROUND(NUM * 1000,2) AS NUM2 FROM NUMERICTEST;
-- TRUNCATE，返回指定小数点位数的截断值
SELECT NUM,NUM*1000,TRUNCATE(NUM * 1000,0) AS NUM2 FROM NUMERICTEST;
SELECT NUM,NUM*1000,TRUNCATE(NUM * 1000,2) AS NUM2 FROM NUMERICTEST;
-- FORMAT，数值格式化
SELECT NUM,NUM*1000000,FORMAT(NUM*1000000,3) AS NUM2 FROM NUMERICTEST;
SELECT NUM,NUM*10000000,FORMAT(NUM*10000000,5) AS NUM2 FROM NUMERICTEST;

-- 文本处理函数

CREATE TABLE STRINGTEST (
	ENNAME VARCHAR(50),
	CHNAME VARCHAR(50)
);

INSERT INTO STRINGTEST VALUES
('  Arnie  ', '  阿尼'),
('   Kalyna   ', '  卡丽娜  '),
('   Bennie  ', ' 本尼  '),
('  Gaiane  ', '  盖恩 '),
('   tomasz  ', ' 托马兹  ');

SELECT * FROM STRINGTEST;

-- LTRIM、RTRIM、TRIM，文本空格处理
SELECT ENNAME, LTRIM(ENNAME) FROM STRINGTEST;
SELECT ENNAME, RTRIM(ENNAME) FROM STRINGTEST;
SELECT ENNAME, LTRIM(RTRIM(ENNAME)) FROM STRINGTEST;
SELECT ENNAME, TRIM(ENNAME) FROM STRINGTEST;

-- 针对查询结果建表
DROP TABLE STRINGTEST2;

CREATE TABLE STRINGTEST2
SELECT TRIM(ENNAME) AS ENNAME,TRIM(CHNAME) AS CHNAME FROM STRINGTEST;

-- CONCAT、CONCAT_WS，文本连接
SELECT CONCAT(TRIM(ENNAME),'-',TRIM(CHNAME)) FROM STRINGTEST;
SELECT CONCAT(ENNAME,'-',CHNAME) FROM STRINGTEST2;

-- REPLACE，文本替换（区分大小写）
SELECT ENNAME,REPLACE(ENNAME,'a','B') FROM STRINGTEST2;

-- LEFT、RIGHT、SUBSTRING，文本截取
SELECT ENNAME,LEFT(ENNAME,2),RIGHT(ENNAME,2) FROM STRINGTEST2;
SELECT ENNAME,SUBSTRING(ENNAME,2,3) FROM STRINGTEST2;

-- LENGTH，文本计数
SELECT ENNAME,LENGTH(ENNAME) FROM STRINGTEST2;

-- INSTR，文本查找（不区分大小写）
SELECT ENNAME,INSTR(ENNAME,'a') FROM STRINGTEST2;

-- 想提取英文名字中a字符（包含）右侧的文本内容

-- 定位到a字符首先出现的位置
SELECT INSTR(ENNAME,'a') FROM STRINGTEST2;

-- 然后再去截取a右侧的文本内容
SELECT ENNAME FROM STRINGTEST2;
SELECT ENNAME,SUBSTRING(ENNAME,INSTR(ENNAME,'a'),LENGTH(ENNAME)-INSTR(ENNAME,'a')+1) FROM STRINGTEST2;

-- UPPER、LOWER，文本大小写
SELECT ENNAME,UPPER(ENNAME),LOWER(ENNAME) FROM STRINGTEST2;

-- 日期和时间函数

-- CURDATE（当前日期）、CURTIME（当前时间）、NOW（当前日期 + 时间）
SELECT CURDATE();
SELECT CURTIME();
SELECT NOW();

-- 获得日期和时间组成部分

-- DATE、YEAR、QUARTER、MONTH、DAY、WEEKOFYEAR
SELECT DATE(NOW());
SELECT YEAR(NOW());
SELECT QUARTER(NOW());
SELECT MONTH(NOW());
SELECT DAY(NOW());
SELECT WEEKOFYEAR(NOW());

-- TIME、HOUR、MINUTE、SECOND
SELECT TIME(NOW());
SELECT HOUR(NOW());
SELECT MINUTE(NOW());
SELECT SECOND(NOW());

-- EXTRACT
SELECT EXTRACT(YEAR FROM NOW());
SELECT EXTRACT(QUARTER FROM NOW());
SELECT EXTRACT(MONTH FROM NOW());
SELECT EXTRACT(DAY FROM NOW());
SELECT EXTRACT(HOUR FROM NOW());
SELECT EXTRACT(MINUTE FROM NOW());
SELECT EXTRACT(SECOND FROM NOW());
SELECT EXTRACT(WEEK FROM NOW());

-- 日期和时间格式设置，DATE_FORMAT
SELECT NOW();
SELECT DATE_FORMAT(NOW(),'%Y年%m月%d日%H时%i分%S秒');
SELECT DATE_FORMAT(NOW(),'%Y%m%d');
SELECT Name,DATE_FORMAT(JoinedAt,'%Y年%m月%d日') FROM Employee;

SELECT Name,EXTRACT(YEAR FROM JoinedAt) FROM Employee;
SELECT Name,YEAR(JoinedAt) FROM Employee;

-- 日期计算，DATE_ADD，DATEDIFF
SELECT DATE(NOW()),DATE(DATE_ADD(NOW(),INTERVAL 3 YEAR));
SELECT DATE(NOW()),DATE(DATE_ADD(NOW(),INTERVAL -3 DAY));

SELECT DATEDIFF('2022-8-11','2022-5-17');
SELECT Name,DATEDIFF(CURDATE(),JoinedAt) AS joinedDays FROM Employee ORDER BY joinedDays DESC;

-- 空值函数，ISNULL、IFNULL

CREATE TABLE Products(
	Pid INT PRIMARY KEY AUTO_INCREMENT,
	ProductName VARCHAR(50) NOT NULL,
	UnitPrice Decimal(10,2) NOT NULL,
	UnitsInStock INT,
	UnitsOnOrder INT
);

INSERT INTO Products VALUES
(NULL, '苹果手机', 9800, 100, 20),
(NULL, '华为手机', 8800, 200, 40),
(NULL, '小米手机', 7000, 200, NULL);

-- ISNULL，用于对空值做判断

SELECT ProductName, ISNULL(UnitsInStock), ISNULL(UnitsOnOrder) FROM Products;

-- IFNULL，如果数据为空，返回替换值

SELECT ProductName, UnitPrice * (IFNULL(UnitsInStock,0) + IFNULL(UnitsOnOrder,0)) FROM Products;

-- CAST函数，数据类型转换
DESC Employee;

SELECT Name,CAST(JoinedAt AS DATETIME) FROM Employee;

SELECT CONCAT(Name,'-',Salary) FROM Employee;
SELECT CONCAT(Name,'-',CAST(Salary AS Decimal(10,0))) FROM Employee;
SELECT CONCAT(Name,'-',CAST(Salary AS CHAR(5))) FROM Employee;

-- COALESCE函数，返回数据列表中的第一个非空值
SELECT COALESCE(NULL,NULL,1,100);

ALTER TABLE Products ADD COLUMN OrderAmount Decimal(10,2);

UPDATE Products SET OrderAmount = UnitsOnOrder * UnitPrice WHERE Pid = 1;

SELECT ProductName, OrderAmount FROM Products;

-- 有数据，展示
-- 如果为NULL，再次计算
-- 如果结果还是为NULL，给出提示：'无法计算'
SELECT ProductName, COALESCE(OrderAmount,UnitsOnOrder*UnitPrice,'无法计算') FROM Products;